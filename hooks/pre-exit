#!/bin/bash
set -euo pipefail
shopt -s extglob

CACHE_DIR=${BUILDKITE_PLUGIN_JULIA_CACHE_DIR:-${HOME}/.cache/julia-buildkite-plugin}

echo "--- :broom: Performing clean-up"


### Step 1: Remove any code coverage files

echo "Removing coverage files"

# Once JuliaLang/julia#26573 has been fixed, this should no longer be necessary.
find "${CACHE_DIR}"/julia_installs -name "*.jl.*.cov" -type f -delete || true

# Some packages check coverage files in, so only remove writable ones
if [[ "${BUILDKITE_PLUGIN_JULIA_ISOLATED_DEPOT:-true}" == "true" ]]; then
    find "${JULIA_DEPOT_PATH}"/packages -name "*.jl.*.cov" -type f -writable -delete || true
fi


### Step 2: Run `Pkg.gc` to try to reduce the size of the depot.

# since we remove most manifests at the start of each pipeline (cleaning the depot),
# there's no way for Pkg to actually track which artifacts are active, so we just invoke
# `gc()` with `collect_delay` set to zero to cause immediate collection on versions of
# julia that are new enough to have a generational Pkg GC.

GC_CMD="""
using Pkg, Dates

# Allow the user to customize whether items are GC'ed immediately or not
# Defaults to deleting things after a week of inactivity
collect_delay = parse(Int64, get(ENV, \"BUILDKITE_PLUGIN_JULIA_CLEANUP_COLLECT_DELAY\", \"604800\"))

@info(\"Running Pkg.gc()\", collect_delay)
if VERSION >= v\"1.6-\"
    # If we're on v1.6+, we can use verbose, which is nice
    Pkg.gc(collect_delay=Second(collect_delay), verbose=true)
elseif VERSION >= v\"1.3-\"
    # If we're on v1.3+, we must set the collect_delay low
    Pkg.gc(collect_delay=Second(collect_delay))
else
    # Otherwise, on truly old versions, the only thing we can do is call gc()
    Pkg.gc()
end
"""
julia --color=yes -e "${GC_CMD}" || true


### Step 3: If the depot is still greater than the hard limit, remove it altogether.
if [[ "${BUILDKITE_PLUGIN_JULIA_ISOLATED_DEPOT:-true}" == "true" ]]; then
    DEPOT_SIZE_HUMAN=$(du --human-readable --summarize "${JULIA_DEPOT_PATH}" | cut -f 1)
    DEPOT_SIZE=$(du --summarize --bytes "${JULIA_DEPOT_PATH}" | cut -f 1)
    DEPOT_HARD_LIMIT="${BUILDKITE_PLUGIN_JULIA_DEPOT_HARD_SIZE_LIMIT:-21474836480}" # 21474836480 bytes = 20 GiB
    echo "The depot size is: ${DEPOT_SIZE_HUMAN}"
    if [[ ${DEPOT_SIZE} -gt ${DEPOT_HARD_LIMIT} ]]; then
        echo "This is greater than the hard limit (${DEPOT_SIZE} > ${DEPOT_HARD_LIMIT} bytes), so we will clear the entire depot"
        rm -rf "${JULIA_DEPOT_PATH}"
        mkdir -p "${JULIA_DEPOT_PATH}"
    fi
fi
