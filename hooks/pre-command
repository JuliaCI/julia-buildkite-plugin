#!/bin/bash
set -euo pipefail
shopt -s extglob


## make sure we start with a clean depot

if [[ -d $HOME/.julia ]]; then
    pushd $HOME/.julia
    rm -rf -- !(artifacts registries packages compiled datadeps)
    popd
fi


## download Julia

version="$BUILDKITE_PLUGIN_JULIA_VERSION"
echo "--- :julia: Downloading Julia $version"

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    os="linux"
    machine=$(uname -m)
    case "$machine" in
      "x86_64")
        larch="x64"
        rarch="x86_64"
        nightly_rarch="64"
        ;;
      "aarch64")
        larch="aarch64"
        rarch="aarch64"
        nightly_rarch="aarch64"
        ;;
      *)
        buildkite-agent annotate --style error "Unhandled machine $machine"
        exit 1
        ;;
    esac
else
    buildkite-agent annotate --style error "Unhandled OS $OSTYPE"
    exit 1
fi

if [[ "$version" == "nightly" ]]; then
    filename="julia-latest-$os$nightly_rarch.tar.gz"
    url="https://julialangnightlies-s3.julialang.org/bin/$os/$larch/$filename"
else
    filename="julia-$version-latest-$os-$rarch.tar.gz"
    url="https://julialang-s3.julialang.org/bin/$os/$larch/$version/$filename"
fi

downloads=${XDG_DOWNLOAD_DIR:-$HOME/Downloads}
mkdir -p $downloads
wget -nv -NP $downloads "$url"

dest=$HOME/.local/opt/julia-$version
mkdir -p $dest
tar -xf $downloads/$filename --strip-components=1 -C $dest

bindir=$HOME/.local/bin
mkdir -p $bindir
julia=$bindir/julia
ln -sf $dest/bin/julia $julia

export PATH=$bindir:$PATH
julia -e 'using InteractiveUtils; versioninfo()'


## update the registry

echo "--- :julia: Updating the registry"

# Occasionally, there are rather large delays (> a few hours) between the time a package is
# registered in General and propagated to pkg.julialang.org. We can avoid this by manually
# updating the registry, not using the Julia package servers while doing so:
# - https://github.com/JuliaLang/Pkg.jl/issues/2011
# - https://github.com/JuliaRegistries/General/issues/16777
# - https://github.com/JuliaPackaging/PkgServer.jl/issues/60
JULIA_PKG_SERVER="" \
julia -e '
  using Pkg
  if VERSION >= v"1.1-"
    if !isdir(joinpath(DEPOT_PATH[1], "registries", "General"))
      Pkg.Registry.add("General")
    else
      Pkg.Registry.update()
    end
  else
    Pkg.API.update_registry(Pkg.Types.Context())
  end'
