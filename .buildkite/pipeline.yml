steps:
  - label: ":julia: :linux: Linux x86_64 installation test"
    agents:
      queue: "juliaecosystem"
      os: "linux"
      arch: "x86_64"
    plugins:
      # Install version 1.6 specifically
      - "./.buildkite/plugins/julia":
          version: "1.6"
    commands: |
      # Test that we pick up version 1.6
      [[ "$$(julia --version)" == "julia version 1.6"* ]]
      [[ "$$(julia -E 'Sys.ARCH')" == ":x86_64" ]]

  - label: ":julia: :linux: Linux i686 installation test"
    agents:
      queue: "juliaecosystem"
      os: "linux"
      arch: "x86_64"
    plugins:
      # Install Julia v1 so we can use Sandbox
      - JuliaCI/julia:
          version: "1"
      # Use Sandbox to run inside of a 32-bit compatible rootfs
      - staticfloat/sandbox#v1:
          rootfs_url: "https://github.com/JuliaCI/rootfs-images/releases/download/v5.5/agent_linux.i686.tar.gz"
          rootfs_treehash: "9335532ac5eb036ebbb0d5b7fa1df0968f8f0f2d"
      # Smoosh python3 into our rootfs
      - improbable-eng/metahook:
          pre-command:
            apt update -y && apt install -y python3
      # Override the "arch" parameter to install an i686 version inside of the sandbox
      - "./.buildkite/plugins/julia":
          version: "1"
          arch: "i686"
    commands: |
      # Test that we pick up the latest version
      [[ "$$(julia --version)" == "julia version 1."* ]]
      [[ "$$(julia -E 'Sys.ARCH')" == ":i686" ]]


  - label: ":julia: :macos: macOS x86_64 installation test"
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "x86_64"
    plugins:
      # Test asking for a general `1` build
      - "./.buildkite/plugins/julia":
          version: 1
    commands: |
      [[ "$$(julia --version)" == "julia version 1."* ]]

  - label: ":julia: :macos: macOS x86_64 installation test"
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "x86_64"
    plugins:
      # Test asking for a `nightly` build
      - "./.buildkite/plugins/julia":
          version: nightly
    commands: |
      [[ "$$(julia --version)" == "julia version 1."* ]]

  - label: ":julia: :macos: macOS x86_64 nightly installation test"
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "x86_64"
    plugins:
      # Test asking for a `nightly` build
      - "./.buildkite/plugins/julia":
          version: nightly
    commands: |
      [[ "$$(julia --version)" == "julia version 1."* ]]

  - label: ":julia: :macos: macOS aarch64 installation test"
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "aarch64"
    plugins:
      # Test asking for a general `1` build
      - "./.buildkite/plugins/julia":
          version: 1
    commands: |
      [[ "$$(julia --version)" == "julia version 1."* ]]

  # I've contacted buildkite support to figure out why this is not working, they're investiating.
  #- label: ":julia: :windows: Windows x86_64 installation test"
  #  agents:
  #    queue: "juliaecosystem"
  #    os: "windows"
  #    arch: "x86_64"
  #  plugins:
  #    # Test asking for a general `1` build
  #    - ".\\.buildkite\\plugins\\julia":
  #        version: 1
  #  commands: |
  #    [[ "$$(julia --version)" == "julia version 1."* ]]
